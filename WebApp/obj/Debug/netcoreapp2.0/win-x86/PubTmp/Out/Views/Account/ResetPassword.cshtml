@model IdentityDemo.Models.AccountViewModels.ResetPasswordViewModel

@{
    Layout = "_LoginLayout";
}


<div class="register-box">
    <div class="register-logo">
        <img id="logo" src="~/images/ScoreExec copy.png" />
    </div>
    <div class="register-box-body">
        <p class="login-box-msg">Reset Password</p>
        <form asp-action="ResetPassword" enctype="multipart/form-data">

            <div class="form-group has-feedback">
                <input type="email" id="Email" required class="form-control" asp-for="Email" placeholder="Email">
                <span id="EmailError"></span>
            </div>
            <div class="form-group has-feedback">
                <input type="password" id="Password" required class="form-control" asp-for="Password" placeholder="Password">
                <span id="PasswordError"></span>
            </div>
            <div class="form-group has-feedback">
                <input type="password" id="ConfirmPass" required class="form-control" placeholder="Retype password" asp-for="ConfirmPassword">
                <span id="ConfirmPassError"></span>
            </div>
            <div class="row">
                <!-- /.col -->
                <div class="col-xs-4">
                    <button type="submit" disabled id="CreateBtn" class="btn btn-primary btn-block btn-flat">Reset</button>
                </div>
                <!-- /.col -->
            </div>
        </form>

        <a id="Register" style="cursor: pointer" class="text-center">Register a new membership</a>
    </div>
    <!-- /.form-box -->
</div>



@section scripts {

    <style>
        #logo {
            background-image: url('');
            background-size: cover;
            background-position: center;
            height: 45px;
            width: 200px;
        }
    </style>
    <script>

        $('#Register').click(function () {
            $(function () {
                window.location = '/Account/Register'
            });

        })

        var header = new Headers();
        header.append("content-type", "application/json");


        const state = {
            isEmailValid: true,
            isPasswordValid: false,
            isConfirmPasswordValid: false
        };
   
        function validatePassword(password) {
            var re = /^(?=.*[A-Z])(?=.*[!@@#$&*])(?=.*[0-9].)(?=.*[a-z].*[a-z].*[a-z]).{6,}$/;
            return re.test(String(password));
        }
        function validateEmail(email) {
            var re = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(String(email).toLowerCase());
        }
        $('#ConfirmPass').blur(function () {
            const ConfirmPass = $('#ConfirmPass').val();
            var confirmpass = document.getElementById("ConfirmPass").value;
            var pass = document.getElementById("Password").value;
            if (confirmpass == pass && pass != "") {
                state.isConfirmPasswordValid = true;
                updateState(state);
                document.getElementById("ConfirmPassError").innerHTML = "Password match";
                document.getElementById("ConfirmPassError").style.color = "#32CD32";
            }
            else {
                document.getElementById("ConfirmPassError").innerHTML = "Password does not match";
                document.getElementById("ConfirmPassError").style.color = "#FF0000";
                state.isPasswordValid = false;
                updateState(state);
            }
        });
        $('#ConfirmEmail').blur(function () {

            var ConfirmEmail = document.getElementById("ConfirmEmail").value;
            var email = document.getElementById("Email").value;
            if (ConfirmEmail == email && email != "") {
                state.isConfirmEmail = true;
                updateState(state);
                document.getElementById("ConfirmEmailError").innerHTML = "Email match";
                document.getElementById("ConfirmEmailError").style.color = "#32CD32";
            }
            else {
                document.getElementById("ConfirmEmailError").innerHTML = "Email does not match";
                document.getElementById("ConfirmEmailError").style.color = "#FF0000";
                state.isConfirmEmail = false;
                updateState(state);
            }
        });
        $('#Password').blur(function () {
            const password = $('#Password').val();
            if (validatePassword(password)) {
                state.isPasswordValid = true;
                updateState(state);
                document.getElementById("PasswordError").innerHTML = "Valid";
                document.getElementById("PasswordError").style.color = "#32CD32";
            }
            else {
                document.getElementById("PasswordError").style.color = "#FF0000";
                document.getElementById("PasswordError").innerHTML = "Invalid, it contains atleast 1 capital letter and 1 special and min 6 character ";
                state.isPasswordValid = false;
                updateState(state);
            }
        });
        const updateState = (state) => {
            if (state.isEmailValid && state.isPasswordValid && state.isConfirmPasswordValid) {
                $("#CreateBtn").removeAttr("disabled");

            } else {
                $("#CreateBtn").attr("disabled", "disabled");

            }

        };
        $('#Email').blur(function () {

            const email = $('#Email').val();
            if (validateEmail(email)) {
                updateState(state);
                fetch(`/Account/IsEmailAvailable?email=${email}`, {
                    method: "GET",

                    credentials: 'same-origin',
                    headers: header
                }).then(res => {
                    const body = res.json().then(data => {
                        if (data) {
                            document.getElementById("EmailError").innerHTML = "Existing Email";
                            document.getElementById("EmailError").style.color = "#32CD32";
                            state.isEmailValid = true;
                            updateState(state);
                        }
                        else {

                            document.getElementById("EmailError").innerHTML = "Not available";
                            document.getElementById("EmailError").style.color = "#FF0000";
                            state.isEmailValid = false;
                            updateState(state);
                            return;
                        }

                    })
                });

                return;
            }
            else {
                document.getElementById("EmailError").style.color = "#FF0000";
                document.getElementById("EmailError").innerHTML = "Insert a valid email address";
                state.isEmailValid = false;
                updateState(state);
                return;

            }

        });

    </script>
}