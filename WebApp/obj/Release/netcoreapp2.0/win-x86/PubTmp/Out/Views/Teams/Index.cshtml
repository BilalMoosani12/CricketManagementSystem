@model PaginatedList<CricketApp.Domain.Team>

@{
    ViewData["Title"] = "Teams";
}
<div class="container">

    <div class="form-group">
        <a asp-controller="Teams"  class="btn btn-primary"  asp-action="Create">Add</a>
    </div>

    <div class="table-responsive">
        <table id="TeamTable" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>
                        Logo
                    </th>
                    <th>
                        Team
                    </th>
                    <th>
                        Place
                    </th>
                    <th>
                        Zone
                    </th>
                    <th>
                        City
                    </th>
                    <th>
                        Contact
                    </th>

                    <th>
                        Action
                    </th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    <td>
                        @{
                            if (item.TeamLogo != null)
                            {
                                var base64 = item.TeamLogo == null || !item.TeamLogo.Any() ? "" : Convert.ToBase64String(item.TeamLogo);
                                <div class="img-responsive" id="Img" style='margin-bottom: 1em; background-size:cover; background-image: url("data:image/png;base64,@base64");'></div>

                            }
                            else
                            {
                                <span class="label label-warning pull-left">Logo Missing<i class="fas fa-question"></i></span>

                            }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Team_Name)

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Place)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Zone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Contact)
                    </td>

                    <td>
                        <div class="btn-group">
                            <a data-placement="top" class="btn btn-primary" data-toggle="tooltip" title="Add Player" asp-controller="Players" asp-action="create" asp-route-teamId="@item.TeamId"><i class="fas fa-info-circle">Add Player</i></a>
                            <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a data-placement="top" class="btn btn-default" data-toggle="tooltip" title="Edit Mode" asp-action="Edit" asp-route-id="@item.TeamId"><i class="fas fa-edit">Edit</i></a></li>
                                <li> <a data-placement="top" class="btn btn-default" data-toggle="tooltip" style="cursor:pointer" title="Delete"><i data-toggle="modal" data-target="#DeleteModal" onclick="Delete(@item.TeamId)" class="fas fa-trash-alt">Delete</i></a></li>
                                <li><a data-placement="top" class="btn btn-default" data-toggle="tooltip" title="Players" asp-controller="Players" asp-action="PlayerProfile" asp-route-teamId="@item.TeamId"><i class="fas fa-users">Players</i></a></li>
                                <li><a data-placement="top" class="btn btn-default" data-toggle="tooltip" title="Players Records" asp-controller="Players" asp-action="AllPlayerStatistics" asp-route-teamId="@item.TeamId"><i class="fas fa-chart-line">Players Records</i></a></li>
                                <li><a data-placement="top" class="btn btn-default" data-toggle="tooltip" title="Matches" asp-controller="Matches" asp-action="Index" asp-route-teamId="@item.TeamId"><i class="fab fa-accusoft">Team Matches</i></a></li>
                            </ul>
                        </div>

                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <nav class="navbar navbar-light bg-light">
        <form class="form-inline">
            <a asp-action="Index" class="btn @prevDisabled"
               asp-route-page="@(Model.PageIndex - 1)">
                <i style="font-size:30px" class="far fa-hand-point-left"></i>
            </a>
            <a asp-action="Index"
               asp-route-page="@(Model.PageIndex + 1)"
               class="btn @nextDisabled">
                <i style="font-size:30px" class="far fa-hand-point-right"></i>
            </a>
        </form>
    </nav>

</div>
<div id="DeleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body">
                <input type="hidden" id="TeamId" />
                <h3>Are you sure you want to delete this?</h3>

                <div class="wizard-footer">
                    <div class="pull-right">

                    </div>
                    <div class="pull-left">
                        <input type='button' class='btn btn-previous btn-fill btn-primary btn-wd' data-dismiss="modal" value='Cancel' />
                        <input id="deleteBtn" type="button" class='btn btn-finish btn-fill btn-primary btn-wd' data-dismiss="modal" value='Delete' />
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>

        </div>
    </div>
</div>
@section Scripts{
    <script src="http://cdn.datatables.net/1.10.0/js/jquery.dataTables.min.js"></script>
    <script src="http://cdn.datatables.net/plug-ins/e9421181788/integration/bootstrap/3/dataTables.bootstrap.js"></script>
    <style>
        td {
            text-align: center !important;
        }

        th {
            text-align: center !important;
        }

        #Img {
            background-image: url('');
            background-size: cover;
            background-position: center;
            height: 40px;
            width: 50px;
            border: 1px solid #bbb;
        }

        /*.btn-disabled,
        .btn-disabled[disabled] {
            opacity: .4;
            cursor: default !important;
            pointer-events: none;
        }*/



    </style>
    <script>

        var responsiveHelper;
        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };
        var tableElement = $('#TeamTable');

        tableElement.dataTable({
            autoWidth: false,
            preDrawCallback: function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper) {
                    responsiveHelper = new ResponsiveDatatablesHelper(tableElement, breakpointDefinition);
                }
            },
            rowCallback: function (nRow) {
                responsiveHelper.createExpandIcon(nRow);
            },
            drawCallback: function (oSettings) {
                responsiveHelper.respond();
            }
        });

        function Delete(TeamId) {
            document.getElementById("TeamId").value = TeamId;
        }

        $("#deleteBtn")
            .off()
            .on("click", async () => await DeleteData());

        const DeleteData = async () => {
            const teamId = document.getElementById('TeamId').value;
            const model = {
                teamId: Number(teamId),
            };
            var header = new Headers();
            header.append("content-type", "application/json");

            const response = await fetch(`/Team/DeleteConfirmed?teamId=${teamId}`, {
                method: "POST",
                body: JSON.stringify(model),
                credentials: 'same-origin',
                headers: header
            });

            if (response.ok) {
                window.location.reload();
                return;
            } else {
                alert("Record is not deleted");
            }
        };



        $(function () {
            $('#createBtn').click(function () {
                window.location = '/Teams/Create'
            });
        });
                                                                                            //async function FilterData() {
                                                                                            //    var formElement = document.getElementById("Filters");
                                                                                            //    var formData = new FormData(formElement);

                                                                                            //    var zone = formData.get("zone")
                                                                                            //    var city = formData.get("city")


                                                                                            //    // var header = new Headers();
                                                                                            //    //header.append("content-type");

                                                                                            //    const response = await fetch(`/Teams/Index?zone=${zone}&city=${city}`, {
                                                                                            //        credentials: 'same-origin'
                                                                                            //    });

                                                                                            //}

    </script>

}
