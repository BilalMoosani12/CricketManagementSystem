@model PaginatedList<WebApp.ViewModels.MatchScheduledto>

@{
    ViewData["Title"] = "Teams";
}
<div class="container-fluid">
    <ol class="breadcrumb">
        <li><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li><a asp-controller="Teams" asp-action="Index">Team</a></li>
        <li><a>Schedule</a></li>
    </ol>
</div>
<div class="container-fluid">
    @if (User.Identity.IsAuthenticated)
    {
        <div class="form-group">
            <a data-toggle="modal" data-target="#CreateSchedule" class="btn btn-primary">Add</a>
        </div>

    }
    <div class="table-responsive">
        <table id="TeamTable" class="table table-bordered table-striped">
            <thead class="bg-blue-active">
                <tr>
                    <th>
                        Ground
                    </th>
                    <th>
                        Opponent Team
                    </th>
                    <th>
                        Day
                    </th>
                    <th>
                        Month
                    </th>
                    <th>
                        Year
                    </th>
                    <th>
                        Action
                    </th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => item.GroundName)

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OpponentTeam)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Day)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Month)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Year)
                        </td>

                        <td>
                            @if (User.Identity.IsAuthenticated)
                            {
                                <a data-placement="top" data-toggle="tooltip" title="Edit Mode"><i data-toggle="modal" data-target="#CreateSchedule" onclick="ScheduleEdit(@item.MatchScheduleId)" class="fas fa-edit"></i></a>
                                <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" title="Delete"><i data-toggle="modal" data-target="#DeleteModal" onclick="Delete(@item.MatchScheduleId)" class="fas fa-trash-alt"></i></a>

                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }
    </div>
    <nav class="navbar navbar-light bg-light">
        <div id="snackbar">Record is deleted Successfully</div>
        <form class="form-inline">
            <a asp-action="Index" class="btn @prevDisabled"
               asp-route-page="@(Model.PageIndex - 1)">
                <i style="font-size:30px" class="far fa-hand-point-left"></i>
            </a>
            <a asp-action="Index"
               asp-route-page="@(Model.PageIndex + 1)"
               class="btn @nextDisabled">
                <i style="font-size:30px" class="far fa-hand-point-right"></i>
            </a>
            <span class="fa-1x pull-right">
                <strong class="text-primary">Page # @Model.PageIndex of @Model.TotalPages pages</strong>
            </span>
        </form>
    </nav>

</div>
<div id="CreateSchedule" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header bg-blue-active">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Match Schedule</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" value="@ViewBag.TeamId" id="TeamId" />
                <input type="hidden" id="MatchScheduleId" />
                <div class="col-md-6">
                    <div class="form-group label-floating">
                        <label class="control-label">Ground Name<i class="fa fa-asterisk" style="color: red" aria-hidden="true"></i></label>
                        <input id="GroundNameM" required class="form-control" />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group label-floating">
                        <label class="control-label">Opponent Team</label>
                        <input id="OpponentTeamM" class="form-control" />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group label-floating">
                        <label class="control-label">Day<i class="fa fa-asterisk" style="color: red" aria-hidden="true"></i></label>
                        <input id="DayM" type="number" class="form-control" />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group label-floating">
                        <label class="control-label">Month</label>
                        <input id="MonthM" class="form-control" />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group label-floating">
                        <label class="control-label">Year</label>
                        <input id="YearM" type="number" class="form-control" />
                    </div>
                </div>

                <div class="wizard-footer">
                    <div class="pull-left">
                        <input type='button' class='btn btn-previous btn-fill btn-primary btn-wd' data-dismiss="modal" value='Cancel' />
                        <input id="Addbtn" type="button" class='btn btn-finish btn-fill btn-primary btn-wd' data-dismiss="modal" value='Add' />
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>

        </div>
    </div>
</div>

<div id="DeleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header bg-red">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Delete</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="MatchScheduleId" />
                <h3>Are you sure you want to delete this?</h3>

                <div class="wizard-footer">
                    <div class="pull-right">

                    </div>
                    <div class="pull-left">
                        <input type='button' class='btn btn-previous btn-fill btn-primary btn-wd' data-dismiss="modal" value='Cancel' />
                        <input id="deleteBtn" type="button" class='btn btn-finish btn-fill btn-primary btn-wd' data-dismiss="modal" value='Delete' />
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>

        </div>
    </div>
</div>
@section Scripts{
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script src="http://cdn.datatables.net/plug-ins/e9421181788/integration/bootstrap/3/dataTables.bootstrap.js"></script>
    <style>
        td {
            text-align: center !important;
        }

        th {
            text-align: center !important;
        }

        #Img {
            background-image: url('');
            background-size: cover;
            background-position: center;
            height: 40px;
            width: 50px;
            border: 1px solid #bbb;
        }
    </style>
    <script>

        $(document).ready(function () {
            $('#TeamTable').DataTable({
                "paging": false,
                dom: 'Bfrt',
                buttons: [
                    {
                        extend: 'pdfHtml5',

                        //orientation: 'landscape',
                        //pageSize: 'LEGAL'
                    }
                ]
            });
        });

        function Delete(MatchScheduleId) {
            document.getElementById("MatchScheduleId").value = MatchScheduleId;
        }

        $("#deleteBtn")
            .off()
            .on("click", async () => await DeleteData());

        const DeleteData = async () => {
            const matchScheduleId = document.getElementById('MatchScheduleId').value;
            const model = {
                matchScheduleId: Number(matchScheduleId),
            };
            var header = new Headers();
            header.append("content-type", "application/json");

            const response = await fetch(`/Schedule/DeleteConfirmed?matchScheduleId=${matchScheduleId}`, {
                method: "POST",
                body: JSON.stringify(model),
                credentials: 'same-origin',
                headers: header
            });

            if (response.ok) {
                var data = "Record is deleted Successfully";
                myFunction(data);
                return;
            } else {
                var data = "Record could not be deleted";
                myFunction(data);
            }
        };

        function myFunction(data) {
            var snackBar = document.getElementById('snackbar');
            snackBar.textContent = data;
            snackBar.className = "show";
            setTimeout(function () { snackBar.className = snackBar.className.replace("show", ""); }, 3000);
        }

        const postData = async () => {
            const GroundName = document.getElementById('GroundNameM').value;
            const OpponentTeam = document.getElementById('OpponentTeamM').value;
            const Day = document.getElementById('DayM').value;
            const Month = document.getElementById('MonthM').value;
            const Year = document.getElementById('YearM').value;
            const TeamId = document.getElementById('TeamId').value;
            const model = {
                Day: Number(Day),
                Year: Number(Year),
                GroundName: GroundName,
                OpponentTeam: OpponentTeam,
                Month: Month,
                TeamId: TeamId,
            };
            var header = new Headers();
            header.append("content-type", "application/json");

            const response = await fetch('/Schedule/CreateSchedule', {
                method: "POST",
                body: JSON.stringify(model),
                credentials: 'same-origin',
                headers: header
            });

            if (response.ok) {
                data = "Record is added successfully"
                myFunction(data);
                window.location.reload();
                return;
            } else {
                data = "Record could not be added"
                myFunction(data);
            }
        };

        $("#Addbtn")
            .off()
            .on("click", async () => await postData());

        function ScheduleEdit(matchScheduleId) {

            var header = new Headers();
            header.append("content-type", "application/json");

            fetch(`/Schedule/GetEdit?matchScheduleId=${matchScheduleId}`, {
                credentials: 'same-origin',
                headers: header
            })
                .then(response => {
                    if (response.ok) {
                        response.json()
                            .then(json => {
                                document.getElementById("GroundNameM").value = json[0].GroundName;
                                document.getElementById("OpponentTeamM").value = json[0].OpponentTeam;
                                document.getElementById("DayM").value = json[0].day;
                                document.getElementById("MonthM").value = json[0].month;
                                document.getElementById("YearM").value = json[0].year;
                                document.getElementById("TeamId").value = json[0].teamId;
                                document.getElementById("MatchScheduleId").value = json[0].matchScheduleId;
                            })
                            .catch(err => {
                                console.error(err);
                            })
                    }
                })
                .catch(err => {
                    console.error(err);
                });
        }


    </script>

}
