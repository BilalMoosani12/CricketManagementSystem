@model PaginatedList<WebApp.ViewModels.Teamdto>

@{
    ViewData["Title"] = "Teams";
}
<div class="container-fluid">
    <ol class="breadcrumb">
        <li><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li><a>Team</a></li>
    </ol>
</div>
<div class="container-fluid">
    <div class="form-group">
        <div id="filter-panel" style="border: 1px solid #bbb;" class="collapse filter-panel">
            <div class="panel-body">
                <form class="form-inline" role="form" id="Filters">
                    <div class="row">
                        <div class="col-xs-6 col-md-6">
                            <label>Zone</label>
                            <select id="zone" name="zone" asp-items="ViewBag.Zone" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                <option value="">--Select--</option>
                            </select>
                        </div>

                        <div class="col-xs-6 col-md-6">
                            <label>Location</label>
                            <select id="place" name="place" asp-items="ViewBag.Location" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                <option value="">--Select--</option>
                            </select>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-xs-6 col-md-4">
                            <div class="form-group">
                                <button type="submit" id="filterdata" class="btn btn-primary filter-col">
                                    <span><i class="fas fa-search"></i></span> Search
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <ul class="list-inline">
        <li>
            @if (User.Identity.IsAuthenticated)
            {
                <div class="form-group">
                    <a asp-controller="Teams" class="btn btn-primary" asp-action="Create">Add</a>
                </div>

            }
        </li>
        <li>
            <button class="btn btn-box-tool" data-toggle="collapse" data-target="#filter-panel">
                Advanced Search
            </button>
        </li>
    </ul>

    <div class="table-responsive">
        <table id="TeamTable" class="table table-bordered table-striped">
            <thead class="bg-blue-active">
                <tr>
                    <th>
                        Logo
                    </th>
                    <th>
                        Team
                    </th>
                    <th>
                        Place
                    </th>
                    <th>
                        Zone
                    </th>
                    <th>
                        City
                    </th>
                    <th>
                        Contact
                    </th>

                    <th>
                        Action
                    </th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @{
                                if (item.TeamLogo != null)
                                {
                                    var base64 = item.TeamLogo == null || !item.TeamLogo.Any() ? "" : Convert.ToBase64String(item.TeamLogo);
                                    <div class="img-responsive" id="Img" style='margin-bottom: 1em; background-size:cover; background-image: url("data:image/png;base64,@base64");'></div>

                                }
                                else
                                {
                                    <span class="label label-warning pull-left">Logo Missing<i class="fas fa-question"></i></span>

                                }
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Team_Name)

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Place)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Zone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.City)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Contact)
                        </td>

                        <td>
                            @if (User.Identity.IsAuthenticated)
                            {
                                <div class="btn-group">
                                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                                        <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu">

                                        <li><a data-placement="left" data-toggle="tooltip" title="Players" asp-controller="Players" asp-action="PlayerProfile" asp-route-teamId="@item.TeamId"><i class="flaticon-cricket-2"></i></a></li>
                                        <li><a data-placement="left" data-toggle="tooltip" title="Matches" asp-controller="Matches" asp-action="Index" asp-route-teamId="@item.TeamId"><i class="flaticon-cricket-4"></i></a></li>
                                        <li><a data-placement="top" data-toggle="tooltip" title="Schedule" asp-controller="Schedule" asp-action="Index" asp-route-teamId="@item.TeamId"><i class="flaticon-history"></i></a></li>
                                    </ul>
                                </div>
                                <a data-placement="top" data-toggle="tooltip" title="Add Player" asp-controller="Players" asp-action="create" asp-route-teamId="@item.TeamId"><i class="fas fa-user-alt"></i></a>
                                <a data-placement="top" data-toggle="tooltip" title="Edit Mode" asp-action="Edit" asp-route-id="@item.TeamId"><i class="fas fa-edit"></i></a>
                                <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" title="Delete"><i data-toggle="modal" data-target="#DeleteModal" onclick="Delete(@item.TeamId)" class="fas fa-trash-alt"></i></a>
                                

                            }
                            else
                            {
                                <a data-placement="top" data-toggle="tooltip" title="Players" asp-controller="Players" asp-action="PlayerProfile" asp-route-teamId="@item.TeamId"><i class="flaticon-cricket-helmet"></i></a>
                                <a data-placement="top" data-toggle="tooltip" title="Schedule" asp-controller="Schedule" asp-action="Index" asp-route-teamId="@item.TeamId"><i class="fas fa-clock-o"></i></a>

                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }
    </div>
    <nav class="navbar navbar-light bg-light">
        <form class="form-inline">
            <div class="col-md-12">
                <span class="fa-1x">
                    <strong class="text-primary">Showing @Model.PageStartValue to @Model.PageEndValue of @Model.TotalCount entries</strong>
                </span>
                <span class="fa-1x pull-right">
                    <strong class="text-primary">Page # @Model.PageIndex of @Model.TotalPages pages</strong>
                </span>
            </div>
            <a asp-action="Index" class="btn @prevDisabled"
               asp-route-page="@(Model.PageIndex - 1)">
                <i style="font-size:30px" class="far fa-hand-point-left"></i>
            </a>
            <a asp-action="Index"
               asp-route-page="@(Model.PageIndex + 1)"
               class="btn @nextDisabled">
                <i style="font-size:30px" class="far fa-hand-point-right"></i>
            </a>

        </form>
    </nav>
</div>
<div id="snackbar"></div>
<div id="DeleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header bg-red">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Delete</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="TeamId" />
                <h3>Are you sure you want to delete this?</h3>

                <div class="wizard-footer">
                    <div class="pull-right">

                    </div>
                    <div class="pull-left">
                        <input type='button' class='btn btn-previous btn-fill btn-primary btn-wd' data-dismiss="modal" value='Cancel' />
                        <input id="deleteBtn" type="button" class='btn btn-finish btn-fill btn-primary btn-wd' data-dismiss="modal" value='Delete' />
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>

        </div>
    </div>
</div>
@section Scripts{
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script src="http://cdn.datatables.net/plug-ins/e9421181788/integration/bootstrap/3/dataTables.bootstrap.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>

    <style>
        td {
            text-align: center !important;
        }

        th {
            text-align: center !important;
        }

        #Img {
            background-image: url('');
            background-size: cover;
            background-position: center;
            height: 40px;
            width: 50px;
            border: 1px solid #bbb;
        }

        /*.btn-disabled,
        .btn-disabled[disabled] {
            opacity: .4;
            cursor: default !important;
            pointer-events: none;
        }*/



    </style>
    <script>
        //Select2
        $(document).ready(function () {
            $('.js-example-basic-single').select2();
        });
        $(document).ready(function () {
            $('#TeamTable').DataTable({
                "paging": false,
                dom: 'Bfrt',
                buttons: [
                    {
                        extend: 'pdfHtml5',

                        //orientation: 'landscape',
                        //pageSize: 'LEGAL'
                    }
                ]
            });
        });

        function Delete(TeamId) {
            document.getElementById("TeamId").value = TeamId;
        }

        $("#deleteBtn")
            .off()
            .on("click", async () => await DeleteData());

        const DeleteData = async () => {
            const teamId = document.getElementById('TeamId').value;
            const model = {
                teamId: Number(teamId),
            };
            var header = new Headers();
            header.append("content-type", "application/json");

            const response = await fetch(`/Team/DeleteConfirmed?teamId=${teamId}`, {
                method: "POST",
                body: JSON.stringify(model),
                credentials: 'same-origin',
                headers: header
            });

            if (response.ok) {
                var data = "Record is deleted successfully";
                window.location.reload();
                myFunction(data);
                return;
            } else {
                var data = "Record could not be deleted";
                myFunction(data);
            }
        };



        $(function () {
            $('#createBtn').click(function () {
                window.location = '/Teams/Create'
            });
        });
        //async function filterdata() {
        //    var formelement = document.getelementbyid("filters");
        //    var formdata = new formdata(formelement);

        //    var zone = formdata.get("zone")
        //    var city = formdata.get("city")


        //    // var header = new headers();
        //    //header.append("content-type");

        //    const response = await fetch(`/teams/index?zone=${zone}&city=${city}`, {
        //        credentials: 'same-origin'
        //    });

        //}

        function myFunction(data) {
            var snackBar = document.getElementById('snackbar');
            snackBar.textContent = data;
            snackBar.className = "show";
            setTimeout(function () { snackBar.className = snackBar.className.replace("show", ""); }, 3000);
        }
    </script>

}
