@model PaginatedList<CricketApp.Domain.Match>

@{
    ViewData["Title"] = "Matches";
}
<div class="container-fluid">
    <div class="wizard-header">
        <h3 class="wizard-title">
            List Of Played Matches
        </h3>
    </div>
    @*Filter*@
    <div id="filter-panel" style="border: 1px solid #bbb;" class="collapse filter-panel">
        <div class="panel-body">
            <form class="form-inline" role="form" id="Filters">
                <div class="row">

                    <div class="col-xs-6 col-md-3">
                        <label>Home Team</label>
                        <select id="homeTeamId" name="homeTeamId" asp-items="ViewBag.TeamId" placeholder="--Select--">
                            <option value="">--Select--</option>
                        </select>
                    </div>
                    <div class="col-xs-6 col-md-3">
                        <label>
                            Opponent
                        </label>
                        <select id="opponentTeamId" name="opponentTeamId" asp-items="ViewBag.TeamId" placeholder="--Select--">
                            <option value="">--Select--</option>
                        </select>
                    </div>
                    <div class="col-xs-6 col-md-3">
                        <label>Result</label>
                        <select id="result" name="result" placeholder="--Select--">
                            <option value="">--Select--</option>
                            <option>Win</option>
                            <option>Loss</option>
                            <option>Tie</option>
                        </select>
                    </div>
                    @*<div id="clear"></div>*@

                    <div class="col-xs-6 col-md-3">
                        <label>Type</label>
                        <select id="type" placeholder="--Select--">
                            <option value="" disabled="disabled" selected="selected">--Select--</option>
                            <option value="1">Fiendly</option>
                            <option value="2">Tournament</option>
                        </select>
                    </div>
                    <div id="tourSection" class="col-xs-6 col-md-3">
                        <label>Tournament</label>
                        <select id="tournamentId" name="tournamentId" asp-items="ViewBag.TournamentId" placeholder="--Select--">
                            <option value="">--Select--</option>
                        </select>
                    </div>

                    <div class="col-xs-6 col-md-3">
                        <div class="form-group label-floating" style="width: 100%;">
                            <label class="control-label">Overs</label>
                            <select id="matchOvers" name="matchOvers" asp-items="ViewBag.Overs" placeholder="--Select--">
                                <option value="">--Select--</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-3">
                        <div class="form-group label-floating" style="width: 100%;">
                            <label class="control-label">Season</label>
                            <select id="season" name="season" asp-items="ViewBag.Season" placeholder="--Select--">
                                <option value="">--Select--</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <button type="submit" class="btn btn-primary filter-col">
                            <span class="glyphicon glyphicon-record"></span> Search
                        </button>
                    </div>
                </div>
            </form>
        </div>

    </div>
    <button class="btn btn-primary" data-toggle="collapse" data-target="#filter-panel">
        Advanced Search
    </button>

    <a asp-controller="Matches" asp-action="Create" class="made-with-mk">
        <div class="brand">Add</div>
        <div class="made-with"> Create <strong>a new Match</strong></div>
        <div class="ripple-container"></div>
    </a>
    <div class="table-responsive">
        <table id="MatchTable" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>
                        Ground
                    </th>

                    <th>
                        First Inning
                    </th>
                    <th>
                        Second Inning
                    </th>
                    <th>
                        Type
                    </th>
                    <th>
                        Date
                    </th>

                    <th>
                        Overs
                    </th>

                    <th>
                        Result
                    </th>
                    <th>
                        -----Actions-----
                    </th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.GroundName)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.HomeTeam.Team_Name)
                            @*@if (item.PlayerScores.Any()  &&  item.PlayerScores.Any(i => i.Player.TeamId == item.HomeTeamId))
                                {
                                    <span class="badge badge-success">Ready</span>

                                }
                                else
                                {
                                    <span class="badge badge-danger">Pending</span>

                                }*@

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OppponentTeam.Team_Name)
                            @*@if (item.PlayerScores.Any() && item.PlayerScores.Any(i => i.Player.TeamId == item.OppponentTeamId))
                                {
                                    <span class="badge badge-success">Ready</span>

                                }
                                else
                                {
                                    <span class="badge badge-danger">Pending</span>

                                }*@
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOfMatch)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MatchOvers)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Result)
                        </td>

                        <td>
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    <div class="dropdown">
                                        <button  rel="tooltip" title="More Actions"  id="dropdownMenuButton" data-toggle="dropdown">
                                            ....
                                        </button>
                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                            <span><a class="material-icons" rel="tooltip" title="Edit Match" asp-action="Edit" asp-route-id="@item.MatchId">mode_edit</a>Edit</span>
                                            <div class="dropdown-divider"></div>
                                            <a class="material-icons" rel="tooltip" title="Details" asp-action="Details" asp-route-id="@item.MatchId">details</a>
                                            <div class="dropdown-divider"></div>
                                            <a class="material-icons" rel="tooltip" title="Delete Match" asp-action="Delete" asp-route-id="@item.MatchId">delete</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <a class="material-icons" rel="tooltip" title="Score Card" asp-controller="PlayerScores" asp-action="Index" asp-route-oppTeamId="@item.OppponentTeamId" asp-route-homeTeamId="@item.HomeTeamId" asp-route-matchId="@item.MatchId">S</a>
                                </div>
                            </div>

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <nav class="navbar navbar-light bg-light">
        <form class="form-inline">
            <a asp-action="Index" class="material-icons @prevDisabled"
               asp-route-page="@(Model.PageIndex - 1)">
                skip_previous
            </a>
            <a asp-action="Index"
               asp-route-page="@(Model.PageIndex + 1)"
               class="material-icons @nextDisabled">
                skip_next
            </a>
        </form>
    </nav>

</div>

@section Scripts{
    <script src="http://cdn.datatables.net/1.10.0/js/jquery.dataTables.min.js"></script>
    <script src="http://cdn.datatables.net/plug-ins/e9421181788/integration/bootstrap/3/dataTables.bootstrap.js"></script>
    <script>

        $('[data-toggle="tooltip"]').tooltip();

        const change = () => {
            if ($("#type").val() === "2") {
                $("#tourSection").show();
            }
            else {
                $("#tourSection").hide();
                //  document.getElementById("TournamentId").value = "";
            }
        }
        $('#type').on('change', change);
        change();

        $(function () {
            $('#AddNewMatchBtn').click(function () {
                window.location = '/Matches/Create'
            });
        });
        var responsiveHelper;
        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };
        var tableElement = $('#MatchTable');

        tableElement.dataTable({
            autoWidth: false,
            preDrawCallback: function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper) {
                    responsiveHelper = new ResponsiveDatatablesHelper(tableElement, breakpointDefinition);
                }
            },
            rowCallback: function (nRow) {
                responsiveHelper.createExpandIcon(nRow);
            },
            drawCallback: function (oSettings) {
                responsiveHelper.respond();
            }
        });


        async function FilterData() {
            var formElement = document.getElementById("Filters");
            var formData = new FormData(formElement);

            var homeTeamId = formData.get("homeTeamId")
            var opponentTeamId = formData.get("homeTeamId")
            var status = formData.get("type")
            var tournamentId = formData.get("tournamentId")
            var result = formData.get("result")
            var season = formData.get("season")
            var matchOvers = formData.get("matchOvers")



            // var header = new Headers();
            //header.append("content-type");

            const response = await fetch(`/Matches/Index?homeTeamId=${homeTeamId}&opponentTeamId=${opponentTeamId}&status=${status}&result=${result}&tournamentId=${tournamentId}&overs=${matchOvers}&season=${season}`, {
                credentials: 'same-origin'
            });
        }

                                                                                //if (window.matchMedia("(min-wdth: 992px)").matches) {
                                                                                //    document.getelementById("clear").classList.add("clearFix");
                                                                                //} else {
                                                                                //    document.getelementById("clear").classList.remove("clearFix");
                                                                                //}
    </script>
    <style>
        @@media only screen and (max-width: 768px) {
            /* For mobile phones: */
            .material-icons.md-14 {
                font-size: 14px;
            }

            body {
                font-size: 1em;
            }
        }
    </style>
}
