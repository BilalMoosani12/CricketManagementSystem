@model PaginatedList<CricketApp.Domain.Tournament>

@{
    ViewData["Title"] = "Tournaments";
}

<div class="container-fluid">
    <div class="form-group">
        <a asp-controller="Tournament" class="btn btn-primary" asp-action="Create">Add</a>
    </div>

    <table id="TournamentTable" class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>
                    Tournament
                </th>
                <th>
                    Organizor
                </th>
                <th>
                    Starting Date
                </th>
                <th>
                    ----Actions----
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.TournamentName)

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Organizor)

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartingDate)

                    </td>
                    <td>

                        <div class="btn-group">

                            <a asp-controller="Matches" asp-action="Create" asp-route-tournamentId="@item.TournamentId" class="btn btn-primary" data-placement="top" data-toggle="tooltip" title="Add Match">Add Match</a>

                            <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a data-toggle="tooltip" class="btn btn-default" data-placement="top" title="Edit Mode" asp-action="Edit" asp-route-id="@item.TournamentId"><i class="fas fa-edit">Edit</i></a></li>
                                <li> <a data-placement="top" class="btn btn-default" title="Delete" data-toggle="tooltip"><i data-toggle="modal" data-target="#DeleteModal" class="fas fa-trash-alt" style="cursor: pointer" onclick="Delete(@item.TournamentId)">Delete</i></a></li>
                                <li> <a asp-controller="Matches" asp-action="Index" asp-route-tournamentId="@item.TournamentId" class="btn btn-default" data-placement="top" data-toggle="tooltip" title="Matches">Matches</a></li>
                            </ul>
                        </div>

                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <nav class="navbar navbar-light bg-light">

        <form class="form-inline">
            <a asp-action="Index" class="@prevDisabled"
               asp-route-page="@(Model.PageIndex - 1)">
                <i style="font-size:30px" class="far fa-hand-point-left"></i>
            </a>
            <a asp-action="Index"
               asp-route-page="@(Model.PageIndex + 1)"
               class="@nextDisabled">
                <i style="font-size:30px" class="far fa-hand-point-right"></i>
            </a>
        </form>
    </nav>
</div>
<div id="DeleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body">
                <input type="hidden" id="TournamentId" />
                <h3>Are you sure you want to delete this?</h3>

                <div class="wizard-footer">
                    <div class="pull-right">

                    </div>
                    <div class="pull-left">
                        <input type='button' class='btn btn-previous btn-fill btn-primary btn-wd' data-dismiss="modal" value='Cancel' />
                        <input id="deleteBtn" type="button" class='btn btn-finish btn-fill btn-primary btn-wd' data-dismiss="modal" value='Delete' />
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>

        </div>
    </div>
</div>
@section Scripts{
    <script src="http://cdn.datatables.net/1.10.0/js/jquery.dataTables.min.js"></script>
    <script src="http://cdn.datatables.net/plug-ins/e9421181788/integration/bootstrap/3/dataTables.bootstrap.js"></script>
   
    <style>
        td {
            text-align: center !important;
            margin-left: 2em;
        }

        th {
            text-align: center !important;
            margin-left: 2em;
        }
    </style>

    <script>
        $(function () {
            $('#createBtn').click(function () {
                window.location = '/Tournament/Create'
            });
        });

        var responsiveHelper;
        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };
        var tableElement = $('#TournamentTable');

        tableElement.dataTable({
            autoWidth: false,
            preDrawCallback: function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper) {
                    responsiveHelper = new ResponsiveDatatablesHelper(tableElement, breakpointDefinition);
                }
            },
            rowCallback: function (nRow) {
                responsiveHelper.createExpandIcon(nRow);
            },
            drawCallback: function (oSettings) {
                responsiveHelper.respond();
            }
        });

        function Delete(MatchId) {
            document.getElementById("MatchId").value = MatchId;
        }

        $("#deleteBtn")
            .off()
            .on("click", async () => await DeleteData());

        const DeleteData = async () => {
            const tournamentId = document.getElementById('TournamentId').value;
            const model = {
                tournamentId: Number(tournamentId),
            };
            var header = new Headers();
            header.append("content-type", "application/json");

            const response = await fetch(`/Tournament/DeleteConfirmed?tournamentId=${tournamentId}`, {
                method: "POST",
                body: JSON.stringify(model),
                credentials: 'same-origin',
                headers: header
            });

            if (response.ok) {
                window.location.reload();
                return;
            } else {
                alert("Record is not deleted");
            }
        };

    </script>

}
