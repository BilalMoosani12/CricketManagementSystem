@model List<WebApp.ViewModels.MatchScoreDto>

@{
    ViewData["Title"] = "Add a Match Score";
}
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}


<input type="hidden" id="RequestVerificationToken"
       name="RequestVerificationToken" value="@GetAntiXsrfRequestToken()">

<div class="container-fluid">
    <div class="row">
        <section>
            <div class="wizard">
                <div class="wizard-inner">
                    <div class="connecting-line"></div>
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active">
                            <a href="#step1" data-toggle="tab" aria-controls="step1" role="tab" title="Step 1">
                                <span class="round-tab">
                                    <i class="glyphicon glyphicon-folder-open"></i>
                                </span>
                            </a>
                        </li>
                        <li role="presentation">
                            <a href="#step2" data-toggle="tab" aria-controls="step2" role="tab" title="Step 2">
                                <span class="round-tab">
                                    <i class="glyphicon glyphicon-pencil"></i>
                                </span>
                            </a>
                        </li>
                        <li role="presentation">
                            <a href="#complete" data-toggle="tab" aria-controls="complete" role="tab" title="Complete">
                                <span class="round-tab">
                                    <i class="glyphicon glyphicon-ok"></i>
                                </span>
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="tab-content">
                    <div class="tab-pane active" role="tabpanel" id="step1">
                        <div class="container-fluid">
                            <div class="col-sm-2">
                                <select asp-items="ViewBag.HomeTeam" disabled="disabled"></select>
                            </div>
                            <hr />
                            <form class="form-inline" role="form" id="HomeTeamData">

                                <div class="form-inline">

                                    <div class="col-sm-1">

                                        <label class="control-label">S.No</label>

                                    </div>
                                    <div class="col-sm-1">

                                        <label class="control-label">Inning</label>

                                    </div>

                                    <div class="col-sm-4">

                                        <label class="control-label">Batsman</label>

                                    </div>
                                    <div class="col-sm-2">

                                        <label class="control-label">How Out</label>
                                    </div>
                                </div>
                                <div class="col-sm-4">
                                    <label class="control-label">Bowler</label>
                                </div>

                                @{

                                    for (int i = 0; i < Model.Count; i++)
                                    {

                                        <div class="row">
                                            <input type="hidden" asp-for="@Model[i].MatchId" />
                                            <div class="col-sm-1">
                                                @{
                                                    var position = i + 1;
                                                    <label>@position</label>
                                                    <input readonly="readonly" style="display:none;" value="@position" asp-for="@Model[i].Position" />
                                                }
                                            </div>
                                            <div class="col-sm-1">
                                                <div class="checkbox">
                                                    <label>
                                                        <input type="checkbox" asp-for="@Model[i].IsPlayedInning" value="true">
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-sm-4">
                                                <select asp-for="@Model[i].PlayerId" asp-items="ViewBag.HomePlayerId" placeholder="--Select Player--" class="playerDropDown">
                                                    <option value="">--Select Player--</option>
                                                </select>
                                            </div>
                                            <div class="col-sm-2">
                                                <select asp-for="@Model[i].HowOut" placeholder="--How Out--">
                                                    <option value="">--How Out--</option>
                                                    <option>Catch</option>
                                                    <option>Bowled</option>
                                                    <option>Stump</option>
                                                    <option>RunOut</option>
                                                    <option>Hit Wicket</option>
                                                    <option>LBW</option>
                                                    <option>Not Out</option>
                                                </select>
                                            </div>

                                            <div class="col-sm-4">
                                                <select asp-for="@Model[i].Bowler" asp-items="ViewBag.OpponentPlayerId" placeholder="--Select Player--" class="playerDropDown">
                                                    <option value="">--Select Bowler--</option>
                                                </select>
                                            </div>
                                        </div>
                                    }
                                }
                                <hr />
                                @*<div class="form-group">
                                        <input type="submit" value="Save" class="btn btn-primary" />
                                    </div>*@

                                <ul class="list-inline pull-right">
                                    <li><input type="button" id="HomeTeamBtn" value="Save and Continue" class="btn btn-primary next-step" onclick="return HomeTeamData(this.form)"></li>
                                </ul>

                            </form>
                        </div>
                    </div>
                    <div class="tab-pane" role="tabpanel" id="step2">

                        <div class="container-fluid">
                            <div class="col-sm-2">
                                <select asp-items="ViewBag.OpponentTeam" disabled="disabled"></select>
                            </div>

                            <hr />
                            <form class="form-inline" role="form" id="OpponentTeam">

                                <div class="form-inline">

                                    <div class="col-sm-1">

                                        <label class="control-label">S.No</label>

                                    </div>
                                    <div class="col-sm-1">

                                        <label class="control-label">Inning</label>

                                    </div>

                                    <div class="col-sm-4">

                                        <label class="control-label">Player Name</label>

                                    </div>
                                    <div class="col-sm-2">

                                        <label class="control-label">How Out</label>
                                    </div>
                                </div>
                                <div class="col-sm-4">
                                    <label class="control-label">Bowler</label>
                                </div>

                                @{

                                    for (int i = 0; i < Model.Count; i++)
                                    {

                                        <div class="row">
                                            <input type="hidden" asp-for="@Model[i].MatchId" />
                                            <div class="col-sm-1">
                                                @{
                                                    var position = i + 1;
                                                    <label>@position</label>
                                                    <input readonly="readonly" style="display:none;" value="@position" asp-for="@Model[i].Position" />
                                                }
                                            </div>
                                            <div class="col-sm-1">
                                                <div class="checkbox">
                                                    <label>
                                                        <input type="checkbox" asp-for="@Model[i].IsPlayedInning" value="true">
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-sm-4">
                                                <select asp-for="@Model[i].PlayerId" asp-items="ViewBag.OpponentPlayerId" placeholder="--Select Player--" class="playerDropDown">
                                                    <option value="">--Select Player--</option>
                                                </select>
                                            </div>
                                            <div class="col-sm-2">
                                                <select asp-for="@Model[i].HowOut" placeholder="--How Out--">
                                                    <option value="">--How Out--</option>
                                                    <option>Catch</option>
                                                    <option>Bowled</option>
                                                    <option>Stump</option>
                                                    <option>RunOut</option>
                                                    <option>Hit Wicket</option>
                                                    <option>LBW</option>
                                                    <option>Not Out</option>
                                                </select>
                                            </div>

                                            <div class="col-sm-4">
                                                <select asp-for="@Model[i].Bowler" asp-items="ViewBag.HomePlayerId" placeholder="--Select Player--" class="playerDropDown">
                                                    <option value="">--Select Player--</option>
                                                </select>
                                            </div>
                                        </div>
                                    }
                                }
                                <ul class="list-inline pull-right">
                                    <li><input type="button" value="Previous" class="btn btn-default prev-step"></li>
                                    <li><input type="button" id="OpponentTeamBtn" value="Save and Continue" class="btn btn-primary next-step" onclick="return OpponentTeamData(this.form)"></li>
                                </ul>
                            </form>
                        </div>

                    </div>
                    <div class="tab-pane" role="tabpanel" id="complete">
                        <h3>Complete</h3>
                        <p>You have successfully completed all steps.</p>
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>
        </section>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>

        const globalStates = [];
        $(function () {
            $('#BackBtn').click(function () {
                window.location = '/PlayerScores/Index'
            });
        });
        const openModal = (id) => {
            document.getElementById('Modal_PlayerId').value = document.getElementById(`Grid_${id}__PlayerId`).value;
        };


        function HomeTeamData(form) {
            try {
                const param = new window.URL(window.location.href).searchParams;
                var formData = $("#HomeTeamData").serialize();
                $.ajax(`/PLayerScores/Save`, {
                    data: formData,
                    headers: {
                        'RequestVerificationToken': document.getElementById("RequestVerificationToken").value,
                    },
                    method: "POST"
                }).done(function (data) {
                    if (response.ok) {
                        alert("ok");
                    }
                });


            } catch (ex) {
                console.error(ex);
            }

        }

        function OpponentTeamData(form) {
            try {
                const param = new window.URL(window.location.href).searchParams;
                var formData = $("#OpponentTeam").serialize();
                $.ajax(`/PLayerScores/Save`, {
                    data: formData,
                    headers: {
                        'RequestVerificationToken': document.getElementById("RequestVerificationToken").value,
                    },
                    method: "POST"
                }).done(function (data) {
                    if (response.ok) {
                        alert("ok");
                    }
                });

            } catch (ex) {
                console.error(ex);
            }

        }
        $(document).ready(function () {
            //Initialize tooltips
            $('.nav-tabs > li a[title]').tooltip();

            //Wizard
            $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {

                var $target = $(e.target);

                if ($target.parent().hasClass('disabled')) {
                    return false;
                }
            });

            $(".next-step").click(function (e) {

                var $active = $('.wizard .nav-tabs li.active');
                $active.next().removeClass('disabled');
                nextTab($active);

            });
            $(".prev-step").click(function (e) {

                var $active = $('.wizard .nav-tabs li.active');
                prevTab($active);

            });
        });

        function nextTab(elem) {
            $(elem).next().find('a[data-toggle="tab"]').click();
        }
        function prevTab(elem) {
            $(elem).prev().find('a[data-toggle="tab"]').click();
        }
                                      //$('.playerDropDown')
                                    //    .on('change', (event) => {
                                    //        const element = event.target;
                                    //        if (!element.value)
                                    //            return;
                                    //        globalStates.push({
                                    //            value: element.value
                                    //        });
                                    //        removeValues();
                                    //    });

                                    //const removeValues = () => {
                                    //    const elements = $('select.playerDropDown');
                                    //    for (let index = 0; index < elements.length; index++) {
                                    //        const isAdded = _.some(globalStates, {
                                    //            value: elements[index].value
                                    //        });
                                    //        if (!isAdded) {
                                    //            for (let globalState of globalStates) {
                                    //                //elements[index].selectize.removeValues(globalState.value);
                                    //                $(`#${elements[index].id}`)[0].selectize.removeOption(globalState.value);
                                    //            }
                                    //        }
                                    //    }
                                    //};
                                    //Wizard JS

    </script>
}

