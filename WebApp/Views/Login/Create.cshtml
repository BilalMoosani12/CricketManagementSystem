@model CricketApp.Domain.Login

@{
    ViewData["Title"] = "Create";
}

<div class="container">
    <div class="col-sm-12">
        <!--      Wizard container        -->
        <div class="wizard-container">
            <div class="card wizard-card">
                <div class="wizard-header">
                    <h3 class="wizard-title">
                        Sign Up
                    </h3>
                </div>
                <div class="container-fluid">
                    <hr />
                    <form asp-action="Create" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="col-md-8">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="form-group label-floating">
                                            <label class="control-label">First Name</label>
                                            <input type="text" required asp-for="FirstName" class="form-control" />
                                            <span asp-validation-for="FirstName" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="form-group label-floating">
                                            <label class="control-label">Middle Name</label>
                                            <input type="text" asp-for="MiddleName" class="form-control" />
                                            <span asp-validation-for="MiddleName" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="form-group label-floating">
                                            <label class="control-label">Last Name</label>
                                            <input type="text" required asp-for="LastName" class="form-control" />
                                            <span asp-validation-for="LastName" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="form-group label-floating">
                                            <label class="control-label">Cell No.</label>
                                            <input type="number" required asp-for="contact" class="form-control" />
                                            <span asp-validation-for="contact" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="form-group label-floating">
                                            <label class="control-label">Email</label>
                                            <input asp-for="Email" type="email" id="Email" class="form-control" />
                                            <span asp-validation-for="Email" id="EmailError" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="form-group label-floating">
                                            <label class="control-label">User Id</label>
                                            <input required asp-for="UserId" type="text" class="form-control" />
                                            <span asp-validation-for="UserId" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="form-group label-floating">
                                            <label class="control-label">Password</label>
                                            <input required asp-for="Password" Id="Password" type="password" class="form-control" />
                                            <span asp-validation-for="Password" id="PasswordError" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="form-group label-floating">
                                            <label class="control-label">Confirm Password</label>
                                            <input required Id="ConfirmPass" type="password" class="form-control" />
                                            <span id="ConfirmPassError" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <input type="submit" disabled="disabled" id="CreateBtn" value="Create" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="img-responsive" id="PlayerImg" style="background-size:cover"></div>
                                </div>
                            </div>
                        </div>
                        <hr />

                    </form>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="footer">
    <div class="container text-center">
        <button id="BackBtn" class="btn btn-primary btn-xs">Back</button>
    </div>
</div>

@section scripts {
    <style>
        #PlayerImg {
            background-image: url('');
            background-size: cover;
            background-position: center;
            height: 300px;
            width: 500px;
            border: 1px solid #bbb;
        }
    </style>
    <script>
        const state = {
            isEmailValid: false,
            isPasswordValid: false,
            isConfirmPasswordValid: false
        };

        var header = new Headers();
        header.append("content-type", "application/json");

        function validatePassword(password) {
            var re = /^(?=.*[A-Z])(?=.*[!@@#$&*])(?=.*[0-9].)(?=.*[a-z].*[a-z].*[a-z]).{6,}$/;
            return re.test(String(password));
        }

        function validateEmail(email) {
            var re = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(String(email).toLowerCase());
        }
        $('#ConfirmPass').blur(function () {
            const ConfirmPass = $('#ConfirmPass').val();
            var confirmpass = document.getElementById("ConfirmPass").value;
            var pass = document.getElementById("Password").value;
            if (confirmpass == pass) {
                state.isConfirmPasswordValid = true;
                updateState(state);
                document.getElementById("ConfirmPassError").innerHTML = "Password match";
            }
            else {
                document.getElementById("ConfirmPassError").innerHTML = "Password does not match";
                state.isPasswordValid = false;
            }
        });

        $('#Password').blur(function () {
            const password = $('#Password').val();
            if (validatePassword(password)) {
                state.isPasswordValid = true;
                updateState(state);
                document.getElementById("PasswordError").innerHTML = "Valid";

            }
            else {
                document.getElementById("PasswordError").innerHTML = "Invalid";
                state.isPasswordValid = false;;
            }
        });

        const updateState = (state) => {
            if (state.isEmailValid && state.isPasswordValid && state.isConfirmPasswordValid) {
                $("#CreateBtn").removeAttr("disabled");

            } else {
                $("#CreateBtn").attr("disabled", "disabled");

            }

        };

        $('#Email').blur(function () {

            const email = $('#Email').val();
            if (validateEmail(email)) {
                state.isEmailValid = true;
                updateState(state);
                fetch(`/Login/IsEmailAvailable?email=${email}`, {
                    method: "GET",

                    credentials: 'same-origin',
                    headers: header
                }).then(res => {
                    const body = res.json().then(data => {
                        if (data) {
                            document.getElementById("EmailError").innerHTML = "Already Exists";

                        }
                        else {

                            document.getElementById("EmailError").innerHTML = "Available";
                            return;
                        }

                    })
                });

                return;
            }
            else {
                document.getElementById("EmailError").innerHTML = "Insert a valid email address";
                state.isEmailValid = false;
                return;

            }

        });

    </script>
}