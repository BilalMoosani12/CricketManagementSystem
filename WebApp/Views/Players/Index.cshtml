@model PaginatedList<WebApp.ViewModels.Playersdto>

@{
    ViewData["Title"] = "Players";
}
<div class="container-fluid">
    <div class="form-group">
        <div id="filter-panel" class="collapse filter-panel">
            <div class="panel-body">
                <form class="form-inline" role="form" id="Filters">
                    <div class="row">
                        <div class="col-xs-6 col-md-6">
                            <label>Team</label>
                            <select id="teamId" name="teamId" asp-items="ViewBag.TeamId" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                <option value="">--Select--</option>
                            </select>
                        </div>


                        <div class=" col-xs-6 col-md-6">
                            <label>Role</label>
                            <select id="role" asp-items="ViewBag.PlayerRole" name="role" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                <option value="">--Select--</option>
                            </select>
                        </div>
                    </div>
                    <br />
                    <div class=" col-xs-6 col-md-6">
                        <div class="form-group row">
                            <button type="submit" class="btn btn-primary filter-col">
                                <span><i class="fas fa-search"></i></span> Search
                            </button>
                        </div>
                    </div>


                </form>
            </div>

        </div>
        <br />
        <div class="row">
            <div class="col-md-10 col-sm-10">
                <button class="btn btn-primary" data-toggle="collapse" data-target="#filter-panel">
                    Advanced Search
                </button>
            </div>
            <div class="col-md-2 col-sm-2">
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="form-group">
                        <a asp-controller="Players" class="btn btn-primary" asp-action="Create">Add</a>
                    </div>

                }
            </div>
        </div>

    </div>



    <div class="table-responsive">
        <table id="PlayerTable" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>
                        Player Name
                    </th>
                    <th>
                        Role
                    </th>
                    <th>
                        Bat. Style
                    </th>
                    <th>
                        Bowl. Style
                    </th>
                    <th>
                        Birth
                    </th>
                    <th>
                        Team
                    </th>
                    <th>-----Action-----</th>
                </tr>
            </thead>
            <tbody id="myTable">
                @foreach (var item in Model)
                {

                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Player_Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PlayerRole)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BattingStyle)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BowlingStyle)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DOB)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Team)
                        </td>
                        <td>
                            @if (User.Identity.IsAuthenticated)
                            {
                                <a data-placement="top" data-toggle="tooltip" title="Player Profile" asp-controller="Players" asp-action="PlayerStatistics" asp-route-playerId="@item.PlayerId"><i class="fa fa-pie-chart"></i></a>
                                <a data-toggle="tooltip" title="Edit Mode" asp-action="Edit" asp-route-id="@item.PlayerId"><i class="fas fa-edit"></i></a>
                                <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" title="Delete"><i data-toggle="modal" data-target="#DeleteModal" class="fas fa-trash-alt" onclick="Delete(@item.PlayerId)"></i></a>
                                <a data-placement="top" data-toggle="tooltip" title="Past Record" asp-controller="PlayerPastRecord" asp-action="PastRecord" asp-route-playerId="@item.PlayerId"><i class="fa fa-pie-chart"></i></a>

                            }
                            else
                            {
                                <div class="btn-group">
                                    <a data-placement="top" data-toggle="tooltip" title="Player Profile" asp-controller="Players" asp-action="PlayerStatistics" asp-route-playerId="@item.PlayerId"><i class="fa fa-pie-chart">Profile</i></a>
                                </div>

                            }


                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }
    </div>

    <nav class="navbar navbar-light bg-light">
        <form class="form-inline">
            <a asp-action="Index" class="btn @prevDisabled"
               asp-route-page="@(Model.PageIndex - 1)">
                <i style="font-size:30px" class="far fa-hand-point-left"></i>
            </a>
            <a asp-action="Index"
               asp-route-page="@(Model.PageIndex + 1)"
               class="btn @nextDisabled">
                <i style="font-size:30px" class="far fa-hand-point-right"></i>
            </a>
            <span class="fa-1x pull-right">
                <strong class="text-primary">Page # @Model.PageIndex of @Model.TotalPages pages</strong>
            </span>
        </form>
    </nav>
</div>

<div id="DeleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">

            <div class="modal-body">
                <input type="hidden" id="PlayerId" />
                <h3>Are you sure you want to delete this?</h3>

                <div class="wizard-footer">
                    <div class="pull-right">

                    </div>
                    <div class="pull-left">
                        <input type='button' class='btn btn-previous btn-fill btn-primary btn-wd' data-dismiss="modal" value='Cancel' />
                        <input id="deleteBtn" type="button" class='btn btn-finish btn-fill btn-primary btn-wd' data-dismiss="modal" value='Delete' />
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts{
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script src="http://cdn.datatables.net/plug-ins/e9421181788/integration/bootstrap/3/dataTables.bootstrap.js"></script>
    <script>
        //Select2
        $(document).ready(function () {
            $('.js-example-basic-single').select2();
        });


        //var responsiveHelper;
        //var breakpointDefinition = {
        //    tablet: 1024,
        //    phone: 480
        //};
        //var tableElement = $('#PlayerTable');

        //tableElement.dataTable({
        //    autoWidth: false,
        //    preDrawCallback: function () {
        //        // Initialize the responsive datatables helper once.
        //        if (!responsiveHelper) {
        //            responsiveHelper = new ResponsiveDatatablesHelper(tableElement, breakpointDefinition);
        //        }
        //    },
        //    rowCallback: function (nRow) {
        //        responsiveHelper.createExpandIcon(nRow);
        //    },
        //    drawCallback: function (oSettings) {
        //        responsiveHelper.respond();
        //    }
        //});


        $(document).ready(function () {
            $('#PlayerTable').DataTable({
                "paging": false,
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'pdfHtml5',

                        //orientation: 'landscape',
                        //pageSize: 'LEGAL'
                    }
                ]
            });
        });

        $(function () {
            $('#AddBtn').click(function () {
                window.location = '/Players/Create'
            });
        });

        function Delete(PlayerId) {
            document.getElementById("PlayerId").value = PlayerId;
        }

        $("#deleteBtn")
            .off()
            .on("click", async () => await DeleteData());

        const DeleteData = async () => {
            const playerId = document.getElementById('PlayerId').value;
            const model = {
                playerId: Number(playerId),
            };
            var header = new Headers();
            header.append("content-type", "application/json");

            const response = await fetch(`/Players/DeleteConfirmed?playerId=${playerId}`, {
                method: "POST",
                body: JSON.stringify(model),
                credentials: 'same-origin',
                headers: header
            });

            if (response.ok) {
                window.location.reload();
                alert("Record is deleted successfully");

                return;
            } else {
                alert("Record is not deleted");
            }
        };
                                                                                                                        //async function FilterData() {
                                                                                                                        //    var formElement = document.getElementById("Filters");
                                                                                                                        //    var formData = new FormData(formElement);

                                                                                                                        //    var teamId = formData.get("teamId")
                                                                                                                        //    var role = formData.get("role")



                                                                                                                        //    // var header = new Headers();
                                                                                                                        //    //header.append("content-type");

                                                                                                                        //    const response = await fetch(`/Players/Index?teamId=${teamId}&role=${role}`, {
                                                                                                                        //        credentials: 'same-origin'
                                                                                                                        //    });

                                                                                                                        //};



    </script>
    <style>

        @@media only screen and (max-width: 768px) {
            /* For mobile phones: */
            .material-icons.md-14 {
                font-size: 14px;
            }

            body {
                font-size: 1em;
            }
        }

        td {
            text-align: center !important;
        }

        th {
            text-align: center !important;
        }


        #filter-panel {
            border: 1px solid #bbb;
        }

        #PlayerImg {
            background-image: url('');
            background-size: cover;
            background-position: center;
            height: 60px;
            width: 100px;
            border: 1px solid #bbb;
        }
    </style>

}
